{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","group","setGroup","title","items","state","setState","useEffect","storedState","JSON","parse","localStorage","getItem","setItem","stringify","className","type","value","onChange","e","target","onClick","prev","todo","id","uuid","name","newState","onDragEnd","destination","source","index","droppableId","itemcopy","splice","_","map","data","key","userkey","Object","assign","deleteGroup","xmlns","viewBox","fill","fillRule","d","clipRule","provided","ref","innerRef","droppableProps","el","draggableId","draggableProps","dragHandleProps","deleteItem","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f41115b.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\nimport _ from \"lodash\";\nimport {v4 as uuid} from \"uuid\";\n\nconst LOCAL_STORAGE_KEY = 'todo_key';\nfunction App() {\n  const [text, setText] = useState('');\n  const [group, setGroup] = useState('');\n  const [state, setState] = useState({\n    \"todo\": {\n      title: \"Todo\",\n      items: []\n    },\n  })\n\n  useEffect(()=>{\n    const storedState = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if(storedState) {\n      setState(storedState);\n    }\n  },[]);\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state))\n  },[state]);\n\n  const handleDragEng = ({destination, source}) =>{\n    if(!destination) {\n      return \n    }\n    if(destination.index === source.index && destination.droppableId === source.droppableId){\n      return \n    }\n    const itemcopy = {...state[source.droppableId].items[source.index]}\n    setState(prev=>{\n      prev = {...prev}\n      prev[source.droppableId].items.splice(source.index, 1)\n      prev[destination.droppableId].items.splice(destination.index,0,itemcopy)\n      return prev;\n    })\n\n  }\n  const addItem = () => {\n    if(!state){\n      const newState = {\n        \"todo\":{\n          title:\"Todo\",\n          items:[\n            {\n              id: uuid(),\n              name: text\n            }\n          ]\n        }\n      }\n      setState(newState);\n    }else{\n      setState(prev => {\n        return {\n          ...prev,\n          todo: {\n            title: \"Todo\",\n            items: [\n              {\n                id: uuid(),\n                name: text\n              },\n              ...prev.todo.items\n            ]\n          }\n        }\n      })\n    }\n\n    setText(\"\")\n  }\n\n  const addGroup = () =>{\n    if (group in state){\n      return;\n    }\n    setState(prev => {\n      return {\n        ...prev,\n         [group]: {\n          title: group,\n          items: []\n        }\n      }\n    })\n  }\n\n  const deleteGroup = (userkey) =>{\n    let newState = Object.assign({}, state);\n    delete newState[userkey]\n    setState(newState)\n  }\n  const deleteItem = ({key, index}) =>{\n    let newState = Object.assign({}, state);\n    const items = newState[key].items.splice(index,1);\n    setState(newState)\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label>Add Note</label>\n        <input type=\"text\" value={text} onChange={(e)=>setText(e.target.value) }/>\n        <button onClick={addItem}>Add</button>\n      </div>\n      <div>\n        <label>Add Group</label>\n        <input type=\"text\" value={group} onChange={(e)=>setGroup(e.target.value) }/>\n        <button onClick={addGroup}>Add</button>\n      </div>\n      <DragDropContext onDragEnd={handleDragEng}>\n        {_.map(state, (data, key) => {\n          return(\n            <div key={key} className={\"column\"}>\n              {key!==\"todo\" ?\n              (<div onClick={()=>deleteGroup(key)}\n                  className=\"close-group\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n              </div>):\n              <></>\n              }\n              <h3>{data.title}</h3>\n              <Droppable droppableId={key}>\n                {(provided) => {\n                  return(\n                    <div ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    className={\"droppable-col\"}>\n                      {data.items.map((el, index)=>{\n                        return(\n                          <Draggable key={el.id} index={index} draggableId={el.id}>\n                            {(provided)=>{\n                              return (\n                                <div className='item' ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                  <div>\n                                    <div onClick={(e)=>deleteItem({key: key, index: index})}\n                                        className=\"close\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                                        </svg>\n                                    </div>\n                                    {el.name}\n                                  </div>\n                                </div>\n                              )\n                            }}\n                          </Draggable>\n                        )\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  )\n                }}\n              </Droppable>\n            </div>\n          )\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}